<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Vtop______024root____DepSet__heccd7ead____0_8cpp" kind="file" language="C++">
    <compoundname>Vtop___024root__DepSet_heccd7ead__0.cpp</compoundname>
    <includes local="yes">verilated.h</includes>
    <includes local="yes">verilated_dpi.h</includes>
    <includes refid="Vtop______024root_8h" local="yes">Vtop___024root.h</includes>
    <includedby refid="Vtop____ALL_8cpp" local="yes">titan/comms/verilog/tests/sim_build/Vtop__ALL.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>Vtop___024root.h</label>
        <link refid="Vtop______024root_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp</label>
        <link refid="Vtop______024root____DepSet__heccd7ead____0_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>verilated.h</label>
      </node>
      <node id="3">
        <label>verilated_dpi.h</label>
      </node>
      <node id="5">
        <label>verilated_timing.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1a53a43bfd60a72c5c00d5c053abedd74d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VlCoroutine</type>
        <definition>VlCoroutine Vtop___024root___eval_initial__TOP__0</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___eval_initial__TOP__0</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="10" column="13" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_h84412442__0.cpp" bodystart="11" bodyend="28" declfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" declline="10" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1a65c0abf5a6e3043164c4e8a904b4bc35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vtop___024root___eval_initial</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___eval_initial</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="12" column="6" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" bodystart="12" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1a9f8990c2b3818aadbd186ba9c809f348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VL_INLINE_OPT void</type>
        <definition>VL_INLINE_OPT void Vtop___024root___ico_sequent__TOP__0</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___ico_sequent__TOP__0</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="20" column="20" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" bodystart="20" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1a0161863568c71f76c42c712f42eb580b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vtop___024root___eval_ico</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___eval_ico</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="59" column="6" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" bodystart="59" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1a0744aa7af37385d512cb574a94bc2aba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vtop___024root___eval_act</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___eval_act</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="69" column="6" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1ac169b013bb48a9226f587cb5e880ed4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vtop___024root___eval_nba</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___eval_nba</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="75" column="6" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1a6d1d260eb58a8d4ca201641c569238e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vtop___024root___eval_triggers__ico</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___eval_triggers__ico</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="81" column="6" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_h84412442__0.cpp" bodystart="34" bodyend="45" declfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1ad6c4d80d009bd064b4ec94ed0eccad18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vtop___024root___eval_triggers__act</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___eval_triggers__act</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="85" column="6" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_h84412442__0.cpp" bodystart="51" bodyend="62" declfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1ae0a2ed4bf5a90b4d950c09b3770bfc72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vtop___024root___timing_resume</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___timing_resume</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="162" column="6" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" bodystart="162" bodyend="170" declfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" declline="89" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="Vtop______024root____DepSet__heccd7ead____0_8cpp_1a8d33b227a94867ce857d7af0ac8d8722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vtop___024root___eval</definition>
        <argsstring>(Vtop___024root *vlSelf)</argsstring>
        <name>Vtop___024root___eval</name>
        <param>
          <type><ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref> *</type>
          <declname>vlSelf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" line="94" column="6" bodyfile="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp" bodystart="94" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Verilated<sp/>-*-<sp/>C++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DESCRIPTION:<sp/>Verilator<sp/>output:<sp/>Design<sp/>implementation<sp/>internals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>Vtop.h<sp/>for<sp/>the<sp/>primary<sp/>calling<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;verilated.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;verilated_dpi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vtop___024root.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">VlCoroutine<sp/>Vtop___024root___eval_initial__TOP__0(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___eval_initial(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>vlSelf)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVtop____Syms" kindref="compound">Vtop__Syms</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__restrict<sp/>vlSymsp<sp/>VL_ATTR_UNUSED<sp/>=<sp/>vlSelf-&gt;vlSymsp;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>VL_DEBUG_IF(VL_DBG_MSGF(</highlight><highlight class="stringliteral">&quot;+<sp/><sp/><sp/><sp/>Vtop___024root___eval_initial\n&quot;</highlight><highlight class="normal">);<sp/>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>Vtop___024root___eval_initial__TOP__0(vlSelf);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">VL_INLINE_OPT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___ico_sequent__TOP__0(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>vlSelf)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVtop____Syms" kindref="compound">Vtop__Syms</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__restrict<sp/>vlSymsp<sp/>VL_ATTR_UNUSED<sp/>=<sp/>vlSelf-&gt;vlSymsp;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>VL_DEBUG_IF(VL_DBG_MSGF(</highlight><highlight class="stringliteral">&quot;+<sp/><sp/><sp/><sp/>Vtop___024root___ico_sequent__TOP__0\n&quot;</highlight><highlight class="normal">);<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__in1<sp/>=<sp/>vlSelf-&gt;in1;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__in2<sp/>=<sp/>vlSelf-&gt;in2;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__in3<sp/>=<sp/>vlSelf-&gt;in3;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__in4<sp/>=<sp/>vlSelf-&gt;in4;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__sel_i<sp/>=<sp/>vlSelf-&gt;sel_i;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT____Vcellinp__uut_pmux__inputs[0U]<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;in1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT____Vcellinp__uut_pmux__inputs[1U]<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;in2;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT____Vcellinp__uut_pmux__inputs[2U]<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;in3;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT____Vcellinp__uut_pmux__inputs[3U]<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;in4;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__uut_pmux__DOT__selector<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;dut_param_mux__DOT__sel_i;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__uut_pmux__DOT__inputs[0U]<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;dut_param_mux__DOT____Vcellinp__uut_pmux__inputs</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0U];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__uut_pmux__DOT__inputs[1U]<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;dut_param_mux__DOT____Vcellinp__uut_pmux__inputs</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1U];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__uut_pmux__DOT__inputs[2U]<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;dut_param_mux__DOT____Vcellinp__uut_pmux__inputs</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[2U];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__uut_pmux__DOT__inputs[3U]<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;dut_param_mux__DOT____Vcellinp__uut_pmux__inputs</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[3U];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;mux_o<sp/>=<sp/>vlSelf-&gt;dut_param_mux__DOT____Vcellinp__uut_pmux__inputs</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[vlSelf-&gt;sel_i];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__mux_o<sp/>=<sp/>vlSelf-&gt;mux_o;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;dut_param_mux__DOT__uut_pmux__DOT__out<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vlSelf-&gt;mux_o;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___eval_ico(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>vlSelf)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVtop____Syms" kindref="compound">Vtop__Syms</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__restrict<sp/>vlSymsp<sp/>VL_ATTR_UNUSED<sp/>=<sp/>vlSelf-&gt;vlSymsp;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>VL_DEBUG_IF(VL_DBG_MSGF(</highlight><highlight class="stringliteral">&quot;+<sp/><sp/><sp/><sp/>Vtop___024root___eval_ico\n&quot;</highlight><highlight class="normal">);<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vlSelf-&gt;__VicoTriggered.at(0U))<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___ico_sequent__TOP__0(vlSelf);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___eval_act(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>vlSelf)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVtop____Syms" kindref="compound">Vtop__Syms</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__restrict<sp/>vlSymsp<sp/>VL_ATTR_UNUSED<sp/>=<sp/>vlSelf-&gt;vlSymsp;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>VL_DEBUG_IF(VL_DBG_MSGF(</highlight><highlight class="stringliteral">&quot;+<sp/><sp/><sp/><sp/>Vtop___024root___eval_act\n&quot;</highlight><highlight class="normal">);<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___eval_nba(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>vlSelf)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVtop____Syms" kindref="compound">Vtop__Syms</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__restrict<sp/>vlSymsp<sp/>VL_ATTR_UNUSED<sp/>=<sp/>vlSelf-&gt;vlSymsp;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>VL_DEBUG_IF(VL_DBG_MSGF(</highlight><highlight class="stringliteral">&quot;+<sp/><sp/><sp/><sp/>Vtop___024root___eval_nba\n&quot;</highlight><highlight class="normal">);<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___eval_triggers__ico(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">VL_ATTR_COLD<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___dump_triggers__ico(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___eval_triggers__act(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">VL_ATTR_COLD<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___dump_triggers__act(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___timing_resume(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">VL_ATTR_COLD<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___dump_triggers__nba(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___eval(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>vlSelf)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVtop____Syms" kindref="compound">Vtop__Syms</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__restrict<sp/>vlSymsp<sp/>VL_ATTR_UNUSED<sp/>=<sp/>vlSelf-&gt;vlSymsp;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>VL_DEBUG_IF(VL_DBG_MSGF(</highlight><highlight class="stringliteral">&quot;+<sp/><sp/><sp/><sp/>Vtop___024root___eval\n&quot;</highlight><highlight class="normal">);<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>CData</highlight><highlight class="comment">/*0:0*/</highlight><highlight class="normal"><sp/>__VicoContinue;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>VlTriggerVec&lt;1&gt;<sp/>__VpreTriggered;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>IData</highlight><highlight class="comment">/*31:0*/</highlight><highlight class="normal"><sp/>__VnbaIterCount;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>CData</highlight><highlight class="comment">/*0:0*/</highlight><highlight class="normal"><sp/>__VnbaContinue;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>vlSelf-&gt;__VicoIterCount<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>__VicoContinue<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(__VicoContinue)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VicoContinue<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___eval_triggers__ico(vlSelf);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vlSelf-&gt;__VicoTriggered.any())<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VicoContinue<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(VL_UNLIKELY((0x64U<sp/>&lt;<sp/>vlSelf-&gt;__VicoIterCount)))<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___dump_triggers__ico(vlSelf);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VL_FATAL_MT(</highlight><highlight class="stringliteral">&quot;/home/kris/repos/titan/titan/comms/verilog/tests/dut_param_mux.sv&quot;</highlight><highlight class="normal">,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>combinational<sp/>region<sp/>did<sp/>not<sp/>converge.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlSelf-&gt;__VicoIterCount<sp/>=<sp/>((IData)(1U)<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>vlSelf-&gt;__VicoIterCount);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___eval_ico(vlSelf);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>__VnbaIterCount<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>__VnbaContinue<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(__VnbaContinue)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VnbaContinue<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlSelf-&gt;__VnbaTriggered.clear();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlSelf-&gt;__VactIterCount<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlSelf-&gt;__VactContinue<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(vlSelf-&gt;__VactContinue)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlSelf-&gt;__VactContinue<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___eval_triggers__act(vlSelf);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vlSelf-&gt;__VactTriggered.any())<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlSelf-&gt;__VactContinue<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(VL_UNLIKELY((0x64U<sp/>&lt;<sp/>vlSelf-&gt;__VactIterCount)))<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___dump_triggers__act(vlSelf);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VL_FATAL_MT(</highlight><highlight class="stringliteral">&quot;/home/kris/repos/titan/titan/comms/verilog/tests/dut_param_mux.sv&quot;</highlight><highlight class="normal">,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Active<sp/>region<sp/>did<sp/>not<sp/>converge.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlSelf-&gt;__VactIterCount<sp/>=<sp/>((IData)(1U)<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>vlSelf-&gt;__VactIterCount);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VpreTriggered.andNot(vlSelf-&gt;__VactTriggered,<sp/>vlSelf-&gt;__VnbaTriggered);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlSelf-&gt;__VnbaTriggered.set(vlSelf-&gt;__VactTriggered);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___timing_resume(vlSelf);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___eval_act(vlSelf);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vlSelf-&gt;__VnbaTriggered.any())<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VnbaContinue<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(VL_UNLIKELY((0x64U<sp/>&lt;<sp/>__VnbaIterCount)))<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___dump_triggers__nba(vlSelf);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VL_FATAL_MT(</highlight><highlight class="stringliteral">&quot;/home/kris/repos/titan/titan/comms/verilog/tests/dut_param_mux.sv&quot;</highlight><highlight class="normal">,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NBA<sp/>region<sp/>did<sp/>not<sp/>converge.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VnbaIterCount<sp/>=<sp/>((IData)(1U)<sp/>+<sp/>__VnbaIterCount);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vtop___024root___eval_nba(vlSelf);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___timing_resume(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>vlSelf)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVtop____Syms" kindref="compound">Vtop__Syms</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__restrict<sp/>vlSymsp<sp/>VL_ATTR_UNUSED<sp/>=<sp/>vlSelf-&gt;vlSymsp;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>VL_DEBUG_IF(VL_DBG_MSGF(</highlight><highlight class="stringliteral">&quot;+<sp/><sp/><sp/><sp/>Vtop___024root___timing_resume\n&quot;</highlight><highlight class="normal">);<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vlSelf-&gt;__VactTriggered.at(0U))<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlSelf-&gt;__VdlySched.resume();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vtop___024root___eval_debug_assertions(<ref refid="classVtop______024root" kindref="compound">Vtop___024root</ref>*<sp/>vlSelf)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>vlSelf)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVtop____Syms" kindref="compound">Vtop__Syms</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__restrict<sp/>vlSymsp<sp/>VL_ATTR_UNUSED<sp/>=<sp/>vlSelf-&gt;vlSymsp;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>VL_DEBUG_IF(VL_DBG_MSGF(</highlight><highlight class="stringliteral">&quot;+<sp/><sp/><sp/><sp/>Vtop___024root___eval_debug_assertions\n&quot;</highlight><highlight class="normal">);<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(VL_UNLIKELY((vlSelf-&gt;sel_i<sp/>&amp;<sp/>0xfcU)))<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Verilated::overWidthError(</highlight><highlight class="stringliteral">&quot;sel_i&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>VL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="titan/comms/verilog/tests/sim_build/Vtop___024root__DepSet_heccd7ead__0.cpp"/>
  </compounddef>
</doxygen>
